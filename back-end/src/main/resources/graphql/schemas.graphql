schema {
    query: Query
}

type Query {
    products: [Products]
    productsIds(ids: [ID]): [Products]
    product(id: ID): Products
    orders: [Order]
    ordersByEmail(email: String): [Order]
    users: [Users]
    user(id: ID): Users
}

type Products {
    id: Int
    productName: String
    brand: String
    model: String
    country: String
    price: Int
    description: String
    filename: String
    quantityInStock: Int
    color: String
    storageCapacity: String
    screenSize: String
    ram: String
    cpu: String
    os: String
    batteryCapacity: String
    reviews: [Review]
}

type Review {
    id: Int
    author: String
    message: String
    date: String
    rating: Int
}

type Order {
    id: Int
    totalPrice: Float
    date: String
    firstName: String
    lastName: String
    city: String
    address: String
    email: String
    phoneNumber: String
    postIndex: Int
    orderItems: [OrderItem]
}

type OrderItem {
    id: Int
    amount: Int
    quantity: Int
    perfume: Products
}

type Users {
    id: Int
    email: String
    password: String
    firstName: String
    lastName: String
    city: String
    address: String
    phoneNumber: String
    postIndex: String
    activationCode: String
    passwordResetCode: String
    active: Boolean
    provider: String
    roles: [String]
}
